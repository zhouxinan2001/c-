#include<iostream>
using namespace std;
class Point{
public:
	Point(int x=0,int y=0):x(x),y(y) {//构造函数，此时将int看作一个类
		count++;//在构造函数中对count累加所有对象共同维护一个类
	}
	Point(Point& p):x(p.x),y(p.y) {//复制构造函数
		count++;
	}
	~Point() {//析构函数
		count--;
	}
	int GetX() { return x; }
	int GetY() { return y; }
	//静态函数成员，为整个类所特有，引用时可以不用通过对象名直接引用
	static void ShowCount() { cout << count << endl; }
	//可以调用类的静态数据成员以及函数成员，不可直接调用类的数据成员
private:
	int x, y;
	static int count;//静态数据成员声明，用来记录点的个数
};

int Point::count = 0;//静态数据成员的定义以及初始化，使用类名限定
int main() {
	Point a(4,3);
	Point::ShowCount();
	Point b = a;
	Point::ShowCount();//既可使用类名直接调用，也可以使用对象名调用
	b.ShowCount();
	return 0;
}  
