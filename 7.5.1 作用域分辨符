#include<iostream>
using namespace std;
class Base1 {//定义基类1
public:
	int var;
	void fun() { cout << "Member of Base1" << endl; }
};

class Base2 {//定义基类2
public:
	int var;
	void fun() { cout << "Member of Base2" << endl; }
};

class Derived1 :public Base1, public Base2 {//定义派生类1
public:
	int var;//同名数据成员
	int fun() { cout << "Member of Derived" << endl; }//同名函数成员
};
class Derived2 :public Base1, public Base2 {
/*若希望避免二义性，可以使用using语句*/
	using Base1::var;
	using Base1::fun;
};//定义派生类2
int main() {
	Derived1 d;
	Derived1 *p = &d;
	d.var = 1;
	d.fun();
	d.Base1::var = 2;
	d.Base1::fun();
	p->Base2::var = 3;
	p->Base2::fun();

	Derived2 d1;
	Derived2* p1 = &d1;
	//d1.var = 1;错误，具有二义性
	//d1.fun();错误，具有二义性
	d1.Base1::var = 2;
	d1.Base1::fun();
	p1->Base2::var = 3;
	p1->Base2::fun();
	return 0;
}
